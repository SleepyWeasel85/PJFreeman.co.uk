#!/usr/bin/env php
<?php
/**
 * PHP.Gt (http://php.gt)
 * @copyright Copyright â’¸ 2015 Bright Flair Ltd. (http://brightflair.com)
 * @license http://www.opensource.org/licenses/mit-license.php MIT
 */
chdir(__DIR__);
$cwd = getcwd();
$gtroot = realpath(__DIR__ . "/../..");
echo "Starting acceptance tests...\n";

foreach (new DirectoryIterator(__DIR__) as $fileInfo) {
	if($fileInfo->isDot() || !$fileInfo->isDir()) {
		continue;
	}

	$testName = $fileInfo->getFilename();
	$testPath = $fileInfo->getPathname();
	echo "Found acceptance test: $testName\n";
	$testWebroot = $testPath . "/www";
	if(!is_dir($testWebroot)) {
		// Directory may be empty and not part of repo.
		mkdir($testWebroot, 0775, true);
	}

	// Start the server for each individual test.
	chdir($cwd);
	$descriptorSpec = [
		0 => ["pipe", "r"],
		1 => ["pipe", "w"],
		2 => ["pipe", "w"],
	];
	$server = proc_open(
		"$gtroot/bin/serve --approot=$testPath --port=8089",
		$descriptorSpec,
		$pipes
	);

	chdir($testPath . "/test/Acceptance");
	$test = system("$gtroot/vendor/bin/behat", $exitCode);

	// Inbuilt server spawns child processes that need killing.
	$status = proc_get_status($server);
	$pid = $status["pid"];
	$pidArray = [];

	while(!empty($pid)) {
		$pidArray []= $pid;
		$pid = exec("pgrep -P $pid");
	}

	proc_terminate($server);
	proc_close($server);
	foreach ($pidArray as $p) {
		posix_kill($p, SIGKILL);
	}

	if($exitCode == 0) {
		echo "Acceptance test $testName successful\n";
	}
	else {
		echo "\n\nERROR: Acceptance test failed.\n\n";
		exit($exitCode);
	}
}

echo "\n\nSUCCESS: Acceptance tests all OK.\n\n";
exit(0);